<style lang="less">
.container {
    padding-bottom: 200rpx;
}

.logo-img {
    width: 378rpx;
    height: 126rpx;
    margin: 160rpx 0;
}

// 公司信息
.company-container {
    width: 100%;
    margin: 30rpx 0;
    display: flex;
    justify-content: center;
}

.company-container button {
    width: 600rpx;
    margin: 0 auto;
}

.active-btn button {
    border: none;
    background-color: #55ACEE;
    color: #fff;
    font-weight: 500;
}

.van-cell__title {
    text-align: center;
}

// 新增按钮
.login-button button {
    margin-top: 30rpx;
    width: 600rpx;
}

.divive-gap {
    width: 100%;
    height: 10rpx;
    background-color: rgba(100, 100, 100, .8);
}

.popup-container .van-cell{
  width: 100%;
  border-bottom: 1rpx solid rgba(245, 245, 245, .8);
}

</style>

<template>
<view class="container">
  <!-- <view wx:if="{{ !userInfo }}"> -->
  <view>
    <image src="../../assets/images/logo.png" class="logo-img"></image>
  </view>
  <!-- <view wx:else class="userinfo">
    <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover" />
    <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
  </view> -->

  <view class="company-container" wx:for="{{ company }}" wx:key="index">
      <van-button plain type="default" @tap="showPopup({{ index }})" class="{{ currentIndex === index ? 'active-btn' : '' }}">
        {{ item.name }}
      </van-button>
  </view>

  <van-button wx:if="{{ userInfo }}" @tap="handleAddCompany" size="large" class="login-button">绑定新公司</van-button>
  <van-button plain type="default" wx:elif="{{ canIUse }}" open-type="getUserInfo" @getuserinfo="bindGetUserInfo" class="login-button">绑定新公司</van-button>
  <view wx:else>请升级微信版本</view>

  <van-popup
  show="{{ show }}"
  bind:close="hidePopup"
  position="bottom"
  >
    <view class="popup-container">
      <van-group border="{{ false }}">
        <van-cell border="{{ false }}" title="拍照识别" clickable @click="getPhoto('camera')"></van-cell>
        <van-cell border="{{ false }}" title="选择照片识别" clickable @click="getPhoto('album')"></van-cell>
        <van-cell border="{{ false }}" title="自行录入" clickable @click="writeBySelf"></van-cell>
      </van-group>
    </view>
    <view class="divive-gap"></view>
    <view class="popup-container">
      <van-group border="{{ false }}">
        <van-cell border="{{ false }}" title="编辑" clickable @click="handleEditCompany"></van-cell>
        <van-cell border="{{ false }}" title="删除" clickable @click="handleDeleteCompany"></van-cell>
      </van-group>
    </view>
  </van-popup>
</view>
</template>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import { APPID, SECRET, URL } from '../../constant/constant'

@connect({
  company(state) {
    return state.company
  },
  userInfo(state) {
    return state.userInfo
  }
})

export default class Home extends wepy.page {
  config = {
    navigationBarTitleText: '',
    usingComponents: {
      "van-button": "/components/van/button/index",
      "van-swipe-cell": "/components/van/swipe-cell/index",
      "van-cell": "/components/van/cell/index",
      "van-cell-group": "/components/van/cell-group/index",
      "van-popup": "/components/van/popup/index",
    },
  }

  data = {
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
    // show: true,
    // currentIndex: 0,
    show: false,
    currentIndex: -1,
  }

  methods = {
    // 未授权时主动授权再执行增加公司操作
    async bindGetUserInfo(e) {
      await this.getTotalUserInfo(e.detail.userInfo)
      this.methods.handleAddCompany()
    },
    // 编辑公司信息
    handleEditCompany () {
      wx.navigateTo({
        url: '../company/company?type=update&company=' + JSON.stringify(this.company[this.currentIndex])
      })

      this.show = false
    },
    // 删除公司信息
    async handleDeleteCompany() {
      const { confirm } = await wepy.showModal({
        content: '是否删除' + wepy.$store.getState().company[this.currentIndex].name + '及其绑定的发票信息？',
      })

      if (confirm) {
        const { data } = await wepy.request({
          url: URL.deleteCompany,
          method: 'POST',
          data: {
            no: wepy.$store.getState().userInfo.no,
            id: wepy.$store.getState().company[this.currentIndex].id
          },
        })

        wepy.$store.dispatch({
          type: 'UPDATECOMPANY',
          payload: data
        })

        this.show = false
        this.currentIndex = -1
        this.$apply()

        wx.showToast({
          title: '删除成功'
        })
      }
    },
    // 增加公司
    handleAddCompany() {
      wx.navigateTo({
        url: '../company/company?type=add&company='
      })
    },

    // 显示隐藏发票识别的入口
    showPopup(index) {
      this.show = true
      this.currentIndex = index
    },
    hidePopup() {
      this.show = false
    },

    // 调用拍照或者选取照片接口 ======发票识别
    async getPhoto(type) {
      this.show = false
      const _self = this
      const imageData = await wepy.chooseImage({
        count: 1,
        sizeType: 'original',
        sourceType: [type]
      })

      wx.showToast({
        title: '正在识别...',
        icon: 'loading',
        mask: true,
        duration: 60000
      })

      wx.getFileSystemManager().readFile({
        filePath: imageData.tempFilePaths[0], //选择图片返回的相对路径
        encoding: 'base64', //编码格式
        success(res) {
          _self.handleGetAccessToken(res.data)
        }
      })
    },
    // 自行录入
    writeBySelf() {
      this.show = false
      wx.navigateTo({
        url: '../invoice/invoice?message=&company=' + JSON.stringify(this.company[this.currentIndex])
      })
    }
  }

  // 获取access_token
  async handleGetAccessToken(base64) {
    const { data: { access_token } } = await wepy.request({
      url: URL.getBaiDuAccessToken,
      method: 'POST'
    })
    this.getInvoiceData(access_token, base64)
  }

  // 根据access_token 调用百度云发票识别接口
  async getInvoiceData(access_token, base64) {
    const _self = this
    const { data: { words_result } } = await wepy.request({
      url:  URL.invoiceIdentification + access_token,
      data: {
        image: base64,
        detect_direction: true
      },
      header: {
        'content-type': 'application/x-www-form-urlencoded'
      },
      method: 'POST'
    })

    if (words_result) {
      wx.hideToast()

      // const { statusCode } = await wepy.request({
      //   url: URL.checkInvoice,
      //   method: 'POST',
      //   data: {
      //     "no": wepy.$store.getState().userInfo.no,
      //     "companyId": _self.company[_self.currentIndex].id,
      //     "invoiceNum": words_result.InvoiceNum
      //   }
      // })
      //
      // if (statusCode === 403) {
      //   return wx.showModal({
      //     title: '该发票已经被识别过!',
      //     content: `绑定的公司为：${_self.company[_self.currentIndex].name}`,
      //     confirmColor: '#55ACEE',
      //     confirmText: '知道了',
      //     showCancel: false,
      //     success(res) {
      //     }
      //   })
      // } else if (statusCode === 200) {
        wx.navigateTo({
          url: '../invoice/invoice?message=' + JSON.stringify(words_result) + '&company=' + JSON.stringify(_self.company[_self.currentIndex])
        })
      // }
    } else {
      wx.hideToast()
      wx.showModal({
        title: '识别失败',
        content: '未能识别出发票信息',
        confirmText: '自行录入',
        cancelText: '重选照片',
        success(res) {
          if (res.confirm) {
            this.show = false
            wx.navigateTo({
              url: '../invoice/invoice?message=&company=' + JSON.stringify(this.company[this.currentIndex])
            })
          }
        }
      })
    }
  }

  // 根据用户基本信息获取唯一id和公司信息
  async getTotalUserInfo(userInfo) {
    const { code } = await wepy.login()
    if (!code) return
    // const { data: { openid } } = await wepy.request('https://api.weixin.qq.com/sns/jscode2session?appid=' + APPID + '&secret=' + SECRET + '&js_code=' + code + '&grant_type=authorization_code')
    const { data: { openid } } = await wepy.request(URL.getOpenId + '?code=' + code)

    userInfo.openid = openid
    // TODO: 手机号码的获取
    userInfo.phone = ''
    const { data: { no, company } } = await wepy.request({
      url: URL.saveUserInfo,
      data: userInfo,
      method: 'POST'
    })
    // console.log(no, company)
    userInfo.no = no
    wepy.$store.dispatch({
      type: 'UPDATEUSERINFO',
      payload: userInfo
    })
    wepy.$store.dispatch({
      type: 'UPDATECOMPANY',
      payload: company
    })
  }

  async onLoad() {
    if (wepy.$store.getState().userInfo) return

    const res = await wepy.getSetting()

    if (res.authSetting['scope.userInfo']) {
      wx.showToast({
        title: '正在获取公司信息...',
        icon: 'loading'
      })

      const { userInfo } = await wepy.getUserInfo()

      this.getTotalUserInfo(userInfo)
    }
  }
}
</script>

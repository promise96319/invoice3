<style lang="less">
.container {
  margin-bottom: 160rpx;
}

.certificate {
  position: absolute;
  left: -30000rpx;
}

.canvas-container {
  width: 750rpx;
}

.canvas {
  width: 750rpx;
  height: 1500rpx;
  display: inline-block;
}

.img-container {
  width: 100%;
}

.real-img {
  width: 750rpx;
}

image {
  width: 750rpx;
}

.confirm-container {
  margin: 40rpx 0 100rpx;
}

.confirm-container button[plain] {
  margin-bottom: 20rpx;
  width: 600rpx;
  height: 80rpx;
  line-height: 80rpx;
  border: 1rpx solid rgba(85,172,238,1);
  border-radius: 8rpx;
  background-color: #fff;
  color: #55ACEE;
  font-size: 36rpx;
  font-family: PingFang-SC-Regular;
  font-weight: 400;
}

.confirm-container .save-pic[plain] {
  color: #fff;
  background-color: #55ACEE;
  border: none;
}

</style>

<template>
<view class="container">
  <scroll-view class="img-container" scroll-x scroll-y>
    <view class="real-img">
      <image src="{{ tempFilePath }}" style="height: {{ imageHeight * 2 }}rpx;"></image>
    </view>
  </scroll-view>
  <view class="certificate">
      <canvas canvas-id="canvasId" class="canvas"></canvas>
  </view>

  <view class="confirm-container">
    <button plain @tap="hanldeSavePic" class="save-pic">保存</button>
    <button plain @tap="handleCancel">回到主页</button>
  </view>

  <van-dialog id="van-dialog"/>
</view>
</template>

<script>
import wepy from 'wepy'
import Dialog from '../../components/van/dialog/dialog'

export default class Sale extends wepy.page {
  config = {
    navigationBarTitleText: '凭证',
    usingComponents: {
      "van-dialog": "/components/van/dialog/index",
    },
  }

  data = {
    width: 0,
    height: 0,
    result: {},
    tempFilePath: '',
    imageHeight: 0,
  }

  methods = {
    async hanldeSavePic () {
      const { authSetting } = await wepy.getSetting()
      let isAgree = authSetting['scope.writePhotosAlbum']

      if (isAgree === false) {
        Dialog.confirm({
          title: '温馨提示',
          message: '请授权允许保存图片到相册',
          confirmButtonOpenType: 'openSetting',
          confirmButtonText: '授权'
        }).then((res) => {
          isAgree = true
        }).catch((err) => {
          isAgree = false
        })
      }

      if (isAgree === false) return

      const { path } = await wepy.getImageInfo({src: this.tempFilePath})
      const { errMsg } = await wepy.saveImageToPhotosAlbum({filePath: path})
      if (errMsg === 'saveImageToPhotosAlbum:ok') {
        wx.showToast({
          title: '保存成功',
        })
        setTimeout(() => {
          wx.switchTab({
            url: '../scan/scan'
          })
        }, 1500)
      }
    },
    handleCancel () {
      wx.switchTab({
        url: '../scan/scan'
      })
    }
  }

  async onLoad(options) {
     wx.showToast({
       title: '正在生成凭证',
       icon: 'loading',
       duration: 10000,
       mask: true
     })
    this.result = JSON.parse(options.result)
    // this.result = {
    //  "summary": "这是业务描述",
    //  "preparedBy": "c",
    //  "client": "个",
    //  "supplier": "广东苏宁云商磷售有限公司",
    //  "project": "这是业务所属项目",
    //  "employeeName": "xiu小明",
    //  "thirdPartyName": "",
    //  "invoice": {
    //    "purchaserName": "航天信息份有限公司",
    //    "sellerName": "航天信息股份有限公司",
    //    "invoiceType": 0,
    //    "invoiceNum": "00593803",
    //    "invoiceDate": "2014-12-31T16:00:00.000Z",
    //    "amountInFiguers": "5.15",
    //    "serviceDetail": [
    //      {
    //        "commodityName": "货物可乐",
    //        "commodityAmount": "12345.89",
    //        "commodityTax": "0.03"
    //      }, {
    //        "commodityName": "货物可乐",
    //        "commodityAmount": "12345.80",
    //        "commodityTax": "0.00"
    //      }, {
    //        "commodityName": "货物可乐",
    //        "commodityAmount": "12345.89",
    //        "commodityTax": "0.03"
    //      }, {
    //        "commodityName": "货物可乐",
    //        "commodityAmount": "12345.80",
    //        "commodityTax": "0.03"
    //      }, {
    //        "commodityName": "货物可乐",
    //        "commodityAmount": "12345.89",
    //        "commodityTax": "0.03"
    //      }
    //    ],
    //    "discription": "这是业务描述",
    //    "project": "这是业务所属项目",
    //    "identity": 1,
    //    "whoPays": 1,
    //    "employeeName": "xiu小明",
    //    "thirdPartyName": "",
    //    "reason": 1,
    //    "id": 53,
    //    "createdAt": "2018-11-22T03:27:24.640Z",
    //    "updatedAt": "2018-11-22T03:27:24.640Z"
    //  },
    //  "subjects": [
    //    {
    //      "subjectName": "应收账款",
    //      "subjectCode": "1122",
    //      "amount": "5.15"
    //    }, {
    //      "subjectName": "主营业务收入",
    //      "subjectCode": "5001",
    //      "amount": "12345.89"
    //    }, {
    //      "subjectName": "应交税费 - 增值税 - 销项税",
    //      "subjectCode": "5001",
    //      "amount": "0.03"
    //    }, {
    //      "subjectName": "主营业务收入",
    //      "subjectCode": "5001",
    //      "amount": "12345.80"
    //    }, {
    //      "subjectName": "应交税费 - 增值税 - 销项税",
    //      "subjectCode": "5001",
    //      "amount": "0.00"
    //    }
    //  ],
    //  "accountingSupervisor": null,
    //  "bookkeeper": null,
    //  "cashier": null,
    //  "auditor": null,
    //  "id": 7,
    //  "voucherDate": "2018-11-22T03:14:28.666Z",
    //  "createdAt": "2018-11-22T03:14:28.666Z",
    //  "updatedAt": "2018-11-22T03:14:28.666Z"
    // }

    // 获取屏幕宽
    const { windowWidth } = await wepy.getSystemInfo()
    this.width = windowWidth
    this.$apply()

    // 函数定义区域 =====================================
    // 设置一个基准比例
    let cal = (px) => {
      return  px / 750 * this.width
    }

    // canvas换行显示
    let lineWrap = (ctx, str, fontsize, lineheight, width, x, y) => {
      ctx.setFontSize(fontsize)
      let textArr = []
      let index = 0
      for (let i = 1; i < str.length; i++) {
        if (ctx.measureText(str.substring(index, i)).width >= width * 0.8) {
          textArr.push(str.substring(index, i))
          index = i
        }
      }

      textArr.push(str.substring(index))

      for (let i = 0; i < textArr.length; i++) {
        ctx.fillText(textArr[i], x, y + lineheight * (i + 1))
      }
    }

    // canvas绘制区域 =======================================
    const ctx = wx.createCanvasContext('canvasId')

    ctx.setFillStyle('white')
    ctx.fillRect(cal(0), cal(0), cal(750), cal(120) + (7 + this.result.subjects.length) * cal(36))
    ctx.setFillStyle('black')

    // 标题
    ctx.setFontSize(cal(23))
    ctx.fillText('记账凭证', cal(375), cal(40))

    // 时间及编号
    let date = new Date()
    let year = date.getFullYear()
    let month = date.getMonth() + 1
    let day = date.getDate()
    ctx.translate(cal(730), cal(70))
    ctx.setFontSize(cal(13))
    ctx.setTextAlign('right')
    ctx.fillText(year + ' 年 ' + month + ' 月 ' + day + ' 号      记字第 ' + this.result.id + ' 号', cal(0), cal(22))
    ctx.setTextAlign('center')
    ctx.setTextAlign('center')
    ctx.setTextAlign('center')

    // 表格
    // 外框
    let row = this.result.subjects.length + 2
    ctx.translate(cal(-710), cal(50))
    ctx.setStrokeStyle('#000')
    ctx.strokeRect(0, 0, cal(710), cal(36) * row)

    // 内框
    for (let i = 2; i < row - 1; i++) {
      ctx.setStrokeStyle('#999')
      ctx.moveTo(cal(200), cal(36) * i)
      ctx.lineTo(cal(710), cal(36) * i)
      ctx.stroke()
    }

    ctx.moveTo(0, cal(36))
    ctx.lineTo(cal(710), cal(36))

    ctx.moveTo(0, cal(36) * (row -1))
    ctx.lineTo(cal(710), cal(36) * (row -1))

    ctx.moveTo(0, cal(36) * row)
    ctx.lineTo(cal(710), cal(36) * row)

    ctx.moveTo(cal(200), 0)
    ctx.lineTo(cal(200), cal(36) * (row -1))

    ctx.moveTo(cal(330), cal(18))
    ctx.lineTo(cal(330), cal(36) * (row - 1))

    ctx.moveTo(cal(200), cal(18))
    ctx.lineTo(cal(460), cal(18))

    ctx.moveTo(cal(460), 0)
    ctx.lineTo(cal(460), cal(36) * row)

    ctx.moveTo(cal(585), 0)
    ctx.lineTo(cal(585), cal(36) * row)

    ctx.stroke()

    // 表头
    ctx.setFontSize(cal(15))
    ctx.setTextAlign('center')
    ctx.fillText('摘要', cal(100), cal(24))
    ctx.fillText('借方金额', cal(522), cal(24))
    ctx.fillText('贷方金额', cal(646), cal(24))

    ctx.setFontSize(cal(14))
    ctx.fillText('会计科目', cal(330), cal(15))
    ctx.fillText('科目代码', cal(265), cal(33))
    ctx.fillText('科目名称', cal(395), cal(33))

    // 内容部分
    // 摘要内容
    ctx.translate(0, cal(36))
    lineWrap(ctx, this.result.summary, cal(14), cal(16), cal(160), cal(100), cal(10))

    // 物品、服务等
    for (let i = 0; i < this.result.subjects.length; i++) {
      ctx.fillText(this.result.subjects[i].subjectCode, cal(265), cal(24) + cal(36) * i)
      if (ctx.measureText(this.result.subjects[i].subjectName).width >= cal(130) * 0.8) {
        lineWrap(ctx, this.result.subjects[i].subjectName, cal(14), cal(14), cal(130), cal(395), cal(2) + cal(36) * i)
      } else {
        ctx.fillText(this.result.subjects[i].subjectName, cal(395), cal(24) + cal(36) * i)
      }
      if (i === 0) {
        ctx.fillText(this.result.subjects[i].amount, cal(522), cal(24) + cal(36) * i)
      } else {
        ctx.fillText(this.result.subjects[i].amount, cal(646), cal(24) + cal(36) * i)
      }
    }

    // 合计
    ctx.translate(0, cal(36) * (this.result.subjects.length))
    ctx.fillText('合计', cal(230), cal(24))
    ctx.fillText(this.result.invoice.amountInFiguers, cal(522), cal(24))
    ctx.fillText(this.result.invoice.amountInFiguers, cal(646), cal(24))

    // 信息栏
    ctx.beginPath()
    // 边框
    ctx.translate(0, cal(36))
    let leftTitle = ['会计总管', '客户', '供应商', '项目']
    for (let i = 1; i <= 4; i++) {
      ctx.fillText(leftTitle[i - 1], cal(50), cal(24) + (i - 1) * cal(36))
      ctx.moveTo(0, cal(36) * i)
      ctx.lineTo(cal(710), cal(36) * i)
    }

    ctx.moveTo(cal(355), cal(36))
    ctx.lineTo(cal(355), cal(36) * 4)
    ctx.fillText('员工', cal(405), cal(36) + cal(24))

    ctx.moveTo(cal(455), cal(36))
    ctx.lineTo(cal(455), cal(36) * 4)
    ctx.fillText('其他第三方', cal(405), cal(36) * 2 + cal(24))

    ctx.moveTo(cal(710), 0)
    ctx.lineTo(cal(710), cal(36) * 4)
    ctx.fillText('发票号码', cal(405), cal(36) * 3 + cal(24))

    ctx.moveTo(0, 0)
    ctx.lineTo(0, cal(36) * 4)

    ctx.moveTo(cal(100), 0)
    ctx.lineTo(cal(100), cal(36) * 4)

    ctx.moveTo(cal(190), 0)
    ctx.lineTo(cal(190), cal(36))
    let title = ['记账', '出纳', '审核', '制单']
    for (let i = 1; i <= 4; i++) {
      ctx.fillText(title[i - 1], cal(190 + 130 * (i - 1) + 25), cal(24) )
      ctx.moveTo(cal(190 + 130 * (i - 1) + 50), 0)
      ctx.lineTo(cal(190 + 130 * (i - 1) + 50), cal(36))
      ctx.moveTo(cal(190 + 130 * (i - 1) + 130), 0)
      ctx.lineTo(cal(190 + 130 * (i - 1) + 130), cal(36))
    }
    ctx.stroke()

    ctx.fillText(this.result.preparedBy, cal(190 + 130 * 3 + 90), cal(24))
    ctx.fillText(this.result.invoice.invoiceNum, cal(582), cal(24) + cal(36) * 3)
    this.result.project && ctx.fillText(this.result.project, cal(228), cal(24) + cal(36) * 3)
    ctx.fillText(this.result.client, cal(228), cal(24) + cal(36))

    ctx.draw(true, () => {
      this.imageHeight = cal(120) + (7 + this.result.subjects.length) * cal(36)
      setTimeout(() => {
        wx.canvasToTempFilePath({
            x: 0,
            y: 0,
            width: cal(750),
            height: cal(120) + (7 + this.result.subjects.length) * cal(36),
            fileType: 'jpg',
            quality: 0.5,
            canvasId: 'canvasId',//canvasId和标签里面的id对应
            success: (res) => {
                //将获取到的图片临时路径set到canvasSaveimg中
                this.tempFilePath = res.tempFilePath
                this.$apply()
                wx.hideToast()
            },
            fail: (err) => {
              console.log(err);
            }
        })
      }, 500)
    })
  }
}
</script>

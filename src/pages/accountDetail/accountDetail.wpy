<style lang="less">
  .account-container {
    background-color: rgba(245, 245, 245, 1);
    min-height: 100vh;
    .account-header {
      height: 90rpx;
      line-height: 90rpx;
      text-align: center;
      background-color: #fff;
      font-size: 30rpx;
      font-weight: 400;
      color: #fff;
      display: flex;
      view {
        flex: 1;
        background-color: #55ACEE;
        border-right: 1px solid #fff;
        transition: all .3s;
        &:last-child {
          border: none;
        }
        &.active {
          background-color: #fff;
          color: #5C5E6D;
        }
      }
    }
    .filter-container {
      font-size: 30rpx;
      color: rgba(102,102,102,1);
      .filter-header {
        height: 68rpx;
        background-color: rgba(245, 245, 245, 1);
        line-height: 68rpx;
        padding: 0 30rpx;
      }
      .uploaded-date {
        padding: 30rpx 30rpx 20rpx;
        button {
          font-size: 24rpx;
          width: 200rpx;
          height: 60rpx;
          padding: 0;
          margin-right: 30rpx;
          line-height: 60rpx;
          background-color: rgba(245, 245, 245, 1);
        }
        .active button {
          background-color: #55ACEE;
          color: #fff;
        }
      }
      .date-picker {
        padding: 0 30rpx;
        display: flex;
        justify-content: space-between;
        align-items: center;
        button {
          padding: 0;
          height: 60rpx;
          line-height: 60rpx;
          width: 230rpx;
          background-color: rgba(245, 245, 245, 1);
          font-size: 24rpx;
          color:rgba(153,153,153,1);
        }
        .gap {
          width: 27rpx;
          height: 1rpx;
          background: rgba(34,34,34,1);
        }
      }
    }
  }

</style>

<template>
  <view class="account-container">
    <view class="account-header">
      <view wx:for="{{ tabs }}" wx:key="index" class="{{ active === index ? 'active' : ''}}" @tap="toggleTab({{ index }})">{{ item }}</view>
    </view>

    <block wx:if="{{ active === 0 }}">
      <account :active.sync="active" @showFilterPopup.user="showFilterPopup"></account>
    </block>
    <block wx:if="{{ active === 1 }}">
      <account :active.sync="active" @showFilterPopup.user="showFilterPopup"></account>
    </block>
    <block wx:if="{{ active === 2 }}">
      <account :active.sync="active" @showFilterPopup.user="showFilterPopup"></account>
    </block>
    <block wx:if="{{ active === 3 }}">
      <report></report>
    </block>

    <van-popup
     show="{{ isFilterPopupShow }}"
     bind:close="handleHideFilterPopup"
     position="right"
     close-on-click-overlay
     overlay-style="background: rgba(0, 0, 0, .5);"
     custom-style="width: 600rpx; height: 100%; background: #fff;"
     class="filter-container"
    >
      <view class="filter-header">
        筛选
      </view>
      <view class="uploaded-date">
        <van-button class="active">上传日期</van-button>
        <van-button>当前税额所属期</van-button>
      </view>
      <view class="date-picker">
        <van-button>2019年03月04日</van-button>
        <view class="gap"></view>
        <van-button>2019年03月04日</van-button>
      </view>
    </van-popup>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import { PURCHASER, SELLER } from '../../constant/constant'
  import account from '../../components/accountInvoice'
  import report from '../../components/report'

  export default class Account extends wepy.page {
    config = {
      navigationBarTitleText: '财务信息',
      "usingComponents": {
        "van-popup": "/components/van/popup/index",
        "van-button": "/components/van/button/index",
      }
    }

    components = {
      account,
      report
    }

    computed = {
    }

    data = {
      company: {},

      tabs: ['账务总览', '未结账', '已结账', '报表查询'],
      active: 1,

      isFilterPopupShow: true,
    }

    methods = {
      toggleTab(index) {
        this.active = index
      },
      showFilterPopup() {
        this.isFilterPopupShow = true
      },
      handleHideFilterPopup () {
        this.isFilterPopupShow = false
      },
    }

    async onLoad (options) {
      // this.company = JSON.parse(options.company)
      this.company = {
        no: '3',
        name: '有方教育'
      }

      await wepy.setNavigationBarTitle({
        title: this.company.name
      })

    }

  }
</script>
